{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","memo","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onAddMovie","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","showError","setShowError","_useState7","_useState8","foundMovie","setFoundMovie","handleInputChange","useCallback","event","target","value","handleSearch","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","searchedQuery","response","_movie","wrap","_context","prev","next","preventDefault","trim","toLocaleLowerCase","query","fetch","concat","then","res","json","catch","Response","Error","sent","Poster","Title","Plot","imdbID","t0","finish","stop","_x","apply","arguments","handleAddMovie","_Fragment","onSubmit","htmlFor","onChange","type","id","placeholder","cn","disabled","length","onClick","App","setMovies","some","movieFromList","prevState","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a969d5f8.chunk.js","sourcesContent":["import { FC, memo } from 'react';\nimport { Movie } from '../../types';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: FC<Props> = memo(({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n));\n","import { FC, memo } from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: FC<Props> = memo(({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n));\n","import {\n  ChangeEvent, FC, FormEvent, memo, useCallback, useState,\n} from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { Movie, MovieData, ResponseError } from '../../types';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onAddMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: FC<Props> = memo(({ onAddMovie }) => {\n  const [inputValue, setInputValue] = useState<string>('');\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [showError, setShowError] = useState<boolean>(false);\n  const [foundMovie, setFoundMovie] = useState<Movie | null>(null);\n\n  const handleInputChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      setInputValue(event.target.value);\n      setShowError(false);\n    }, [],\n  );\n\n  const handleSearch = useCallback(\n    async (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      const searchedQuery = inputValue.trim().toLocaleLowerCase();\n\n      setIsLoading(true);\n\n      try {\n        const response: MovieData | ResponseError\n        = await getMovie(searchedQuery);\n\n        if ('Title' in response) {\n          const movie = response as MovieData;\n\n          if (movie.Poster === 'N/A') {\n            movie.Poster\n            = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n          }\n\n          setFoundMovie({\n            title: movie.Title,\n            description: movie.Plot,\n            imgUrl: movie.Poster,\n            imdbUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n            imdbId: movie.imdbID,\n          });\n        } else {\n          const error = response as ResponseError;\n\n          throw new Error(error.Error);\n        }\n      } catch (error) {\n        setShowError(true);\n      } finally {\n        setIsLoading(false);\n        setInputValue('');\n      }\n    }, [inputValue],\n  );\n\n  const handleAddMovie = useCallback((movie: Movie) => {\n    onAddMovie(movie);\n    setFoundMovie(null);\n  }, [onAddMovie]);\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSearch}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={inputValue}\n              onChange={handleInputChange}\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', {\n                'is-danger': showError,\n              })}\n            />\n          </div>\n          {\n            showError && (\n              <p className=\"help is-danger\" data-cy=\"errorMessage\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              disabled={!inputValue.trim().length}\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button', 'is-light', {\n                'is-loading': isLoading,\n              })}\n            >\n              Find a movie\n            </button>\n          </div>\n          {\n            foundMovie && (\n              <div className=\"control\">\n                <button\n                  onClick={() => handleAddMovie(foundMovie)}\n                  data-cy=\"addButton\"\n                  type=\"button\"\n                  className=\"button is-primary\"\n                >\n                  Add to the list\n                </button>\n              </div>\n            )\n          }\n        </div>\n      </form>\n      {\n        foundMovie && (\n          <div className=\"container\" data-cy=\"previewContainer\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={foundMovie} />\n          </div>\n        )\n      }\n    </>\n  );\n});\n","import { MovieData, ResponseError } from './types';\n\nconst API_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=b46131f4';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = useCallback((movie: Movie) => {\n    if (movies.some(movieFromList => movieFromList.imdbId === movie.imdbId)) {\n      return;\n    }\n\n    setMovies(prevState => ([\n      ...prevState,\n      movie,\n    ]));\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}